operation:"+","accAdd",left:Lit(Str(Str { span: 2274963..2274983, value: "总数：", raw: Some("\"\\u603B\\u6570\\uFF1A\"") })),right:Ident(Ident { span: 2274986..2274990, ctxt: #5, sym: "text", optional: false })
start:2274963,end:2274990
operation:"+","accAdd",left:Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Lit(Str(Str { span: 2274963..2274983, value: "总数：", raw: Some("\"\\u603B\\u6570\\uFF1A\"") })) }, ExprOrSpread { spread: None, expr: Ident(Ident { span: 2274986..2274990, ctxt: #5, sym: "text", optional: false }) }], type_args: None }),right:Lit(Str(Str { span: 2274993..2275031, value: "，校验通过：", raw: Some("\"\\uFF0C\\u6821\\u9A8C\\u901A\\u8FC7\\uFF1A\"") }))
start:2274963,end:2275031
operation:"+","accAdd",left:Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Lit(Str(Str { span: 2274963..2274983, value: "总数：", raw: Some("\"\\u603B\\u6570\\uFF1A\"") })) }, ExprOrSpread { spread: None, expr: Ident(Ident { span: 2274986..2274990, ctxt: #5, sym: "text", optional: false }) }], type_args: None }) }, ExprOrSpread { spread: None, expr: Lit(Str(Str { span: 2274993..2275031, value: "，校验通过：", raw: Some("\"\\uFF0C\\u6821\\u9A8C\\u901A\\u8FC7\\uFF1A\"") })) }], type_args: None }),right:Member(MemberExpr { span: 2275034..2275051, obj: Ident(Ident { span: 2275034..2275040, ctxt: #5, sym: "record", optional: false }), prop: Ident(IdentName { span: 2275041..2275051, sym: "passNumber" }) })
start:2274963,end:2275051
operation:"+","accAdd",left:Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Lit(Str(Str { span: 2274963..2274983, value: "总数：", raw: Some("\"\\u603B\\u6570\\uFF1A\"") })) }, ExprOrSpread { spread: None, expr: Ident(Ident { span: 2274986..2274990, ctxt: #5, sym: "text", optional: false }) }], type_args: None }) }, ExprOrSpread { spread: None, expr: Lit(Str(Str { span: 2274993..2275031, value: "，校验通过：", raw: Some("\"\\uFF0C\\u6821\\u9A8C\\u901A\\u8FC7\\uFF1A\"") })) }], type_args: None }) }, ExprOrSpread { spread: None, expr: Member(MemberExpr { span: 2275034..2275051, obj: Ident(Ident { span: 2275034..2275040, ctxt: #5, sym: "record", optional: false }), prop: Ident(IdentName { span: 2275041..2275051, sym: "passNumber" }) }) }], type_args: None }),right:Lit(Str(Str { span: 2275054..2275080, value: "，成功：", raw: Some("\"\\uFF0C\\u6210\\u529F\\uFF1A\"") }))
start:2274963,end:2275080
operation:"+","accAdd",left:Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Lit(Str(Str { span: 2274963..2274983, value: "总数：", raw: Some("\"\\u603B\\u6570\\uFF1A\"") })) }, ExprOrSpread { spread: None, expr: Ident(Ident { span: 2274986..2274990, ctxt: #5, sym: "text", optional: false }) }], type_args: None }) }, ExprOrSpread { spread: None, expr: Lit(Str(Str { span: 2274993..2275031, value: "，校验通过：", raw: Some("\"\\uFF0C\\u6821\\u9A8C\\u901A\\u8FC7\\uFF1A\"") })) }], type_args: None }) }, ExprOrSpread { spread: None, expr: Member(MemberExpr { span: 2275034..2275051, obj: Ident(Ident { span: 2275034..2275040, ctxt: #5, sym: "record", optional: false }), prop: Ident(IdentName { span: 2275041..2275051, sym: "passNumber" }) }) }], type_args: None }) }, ExprOrSpread { spread: None, expr: Lit(Str(Str { span: 2275054..2275080, value: "，成功：", raw: Some("\"\\uFF0C\\u6210\\u529F\\uFF1A\"") })) }], type_args: None }),right:Member(MemberExpr { span: 2275083..2275103, obj: Ident(Ident { span: 2275083..2275089, ctxt: #5, sym: "record", optional: false }), prop: Ident(IdentName { span: 2275090..2275103, sym: "successNumber" }) })
start:2274963,end:2275103
operation:"+","accAdd",left:Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Lit(Str(Str { span: 2274963..2274983, value: "总数：", raw: Some("\"\\u603B\\u6570\\uFF1A\"") })) }, ExprOrSpread { spread: None, expr: Ident(Ident { span: 2274986..2274990, ctxt: #5, sym: "text", optional: false }) }], type_args: None }) }, ExprOrSpread { spread: None, expr: Lit(Str(Str { span: 2274993..2275031, value: "，校验通过：", raw: Some("\"\\uFF0C\\u6821\\u9A8C\\u901A\\u8FC7\\uFF1A\"") })) }], type_args: None }) }, ExprOrSpread { spread: None, expr: Member(MemberExpr { span: 2275034..2275051, obj: Ident(Ident { span: 2275034..2275040, ctxt: #5, sym: "record", optional: false }), prop: Ident(IdentName { span: 2275041..2275051, sym: "passNumber" }) }) }], type_args: None }) }, ExprOrSpread { spread: None, expr: Lit(Str(Str { span: 2275054..2275080, value: "，成功：", raw: Some("\"\\uFF0C\\u6210\\u529F\\uFF1A\"") })) }], type_args: None }) }, ExprOrSpread { spread: None, expr: Member(MemberExpr { span: 2275083..2275103, obj: Ident(Ident { span: 2275083..2275089, ctxt: #5, sym: "record", optional: false }), prop: Ident(IdentName { span: 2275090..2275103, sym: "successNumber" }) }) }], type_args: None }),right:Lit(Str(Str { span: 2275106..2275132, value: "，撤回：", raw: Some("\"\\uFF0C\\u64A4\\u56DE\\uFF1A\"") }))
start:2274963,end:2275132
operation:"+","accAdd",left:Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Lit(Str(Str { span: 2274963..2274983, value: "总数：", raw: Some("\"\\u603B\\u6570\\uFF1A\"") })) }, ExprOrSpread { spread: None, expr: Ident(Ident { span: 2274986..2274990, ctxt: #5, sym: "text", optional: false }) }], type_args: None }) }, ExprOrSpread { spread: None, expr: Lit(Str(Str { span: 2274993..2275031, value: "，校验通过：", raw: Some("\"\\uFF0C\\u6821\\u9A8C\\u901A\\u8FC7\\uFF1A\"") })) }], type_args: None }) }, ExprOrSpread { spread: None, expr: Member(MemberExpr { span: 2275034..2275051, obj: Ident(Ident { span: 2275034..2275040, ctxt: #5, sym: "record", optional: false }), prop: Ident(IdentName { span: 2275041..2275051, sym: "passNumber" }) }) }], type_args: None }) }, ExprOrSpread { spread: None, expr: Lit(Str(Str { span: 2275054..2275080, value: "，成功：", raw: Some("\"\\uFF0C\\u6210\\u529F\\uFF1A\"") })) }], type_args: None }) }, ExprOrSpread { spread: None, expr: Member(MemberExpr { span: 2275083..2275103, obj: Ident(Ident { span: 2275083..2275089, ctxt: #5, sym: "record", optional: false }), prop: Ident(IdentName { span: 2275090..2275103, sym: "successNumber" }) }) }], type_args: None }) }, ExprOrSpread { spread: None, expr: Lit(Str(Str { span: 2275106..2275132, value: "，撤回：", raw: Some("\"\\uFF0C\\u64A4\\u56DE\\uFF1A\"") })) }], type_args: None }),right:Member(MemberExpr { span: 2275135..2275156, obj: Ident(Ident { span: 2275135..2275141, ctxt: #5, sym: "record", optional: false }), prop: Ident(IdentName { span: 2275142..2275156, sym: "withdrawNumber" }) })
start:2274963,end:2275156
operation:"+","accAdd",left:Ident(Ident { span: 2275458..2275462, ctxt: #6, sym: "text", optional: false }),right:Lit(Str(Str { span: 2275465..2275468, value: "/", raw: Some("\"/\"") }))
start:2275458,end:2275468
operation:"+","accAdd",left:Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Ident(Ident { span: 2275458..2275462, ctxt: #6, sym: "text", optional: false }) }, ExprOrSpread { spread: None, expr: Lit(Str(Str { span: 2275465..2275468, value: "/", raw: Some("\"/\"") })) }], type_args: None }),right:Member(MemberExpr { span: 2275471..2275488, obj: Ident(Ident { span: 2275471..2275477, ctxt: #6, sym: "record", optional: false }), prop: Ident(IdentName { span: 2275478..2275488, sym: "operatorId" }) })
start:2275458,end:2275488